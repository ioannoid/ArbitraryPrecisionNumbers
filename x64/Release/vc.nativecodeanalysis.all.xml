<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>c:\users\ioannis.ioannis-pc\source\repos\largenumber\largenumber\</FILEPATH>
      <FILENAME>arbitraryint.h</FILENAME>
      <LINE>19</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26439</DEFECTCODE>
    <DESCRIPTION>This kind of function may not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>AInt::{ctor}</FUNCTION>
    <DECORATED>??0AInt@@QEAA@XZ</DECORATED>
    <FUNCLINE>19</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\ioannis.ioannis-pc\source\repos\largenumber\largenumber\</FILEPATH>
      <FILENAME>arbitraryint.cpp</FILENAME>
      <LINE>134</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AInt::-::&lt;lambda_d9729e38f85ddb4d319cc12882f7273d&gt;::()</FUNCTION>
    <DECORATED>??R&lt;lambda_d9729e38f85ddb4d319cc12882f7273d&gt;@@QEBA?AVAInt@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z</DECORATED>
    <FUNCLINE>151</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\ioannis.ioannis-pc\source\repos\largenumber\largenumber\</FILEPATH>
      <FILENAME>arbitraryint.cpp</FILENAME>
      <LINE>137</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AInt::-::&lt;lambda_d9729e38f85ddb4d319cc12882f7273d&gt;::()</FUNCTION>
    <DECORATED>??R&lt;lambda_d9729e38f85ddb4d319cc12882f7273d&gt;@@QEBA?AVAInt@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z</DECORATED>
    <FUNCLINE>151</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\ioannis.ioannis-pc\source\repos\largenumber\largenumber\</FILEPATH>
      <FILENAME>arbitraryint.cpp</FILENAME>
      <LINE>139</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AInt::-::&lt;lambda_d9729e38f85ddb4d319cc12882f7273d&gt;::()</FUNCTION>
    <DECORATED>??R&lt;lambda_d9729e38f85ddb4d319cc12882f7273d&gt;@@QEBA?AVAInt@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z</DECORATED>
    <FUNCLINE>151</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\ioannis.ioannis-pc\source\repos\largenumber\largenumber\</FILEPATH>
      <FILENAME>arbitraryint.cpp</FILENAME>
      <LINE>139</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AInt::-::&lt;lambda_d9729e38f85ddb4d319cc12882f7273d&gt;::()</FUNCTION>
    <DECORATED>??R&lt;lambda_d9729e38f85ddb4d319cc12882f7273d&gt;@@QEBA?AVAInt@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z</DECORATED>
    <FUNCLINE>151</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\ioannis.ioannis-pc\source\repos\largenumber\largenumber\</FILEPATH>
      <FILENAME>arbitraryint.cpp</FILENAME>
      <LINE>209</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AInt::*</FUNCTION>
    <DECORATED>??DAInt@@QEAA?AV0@V0@@Z</DECORATED>
    <FUNCLINE>196</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>c:\users\ioannis.ioannis-pc\source\repos\largenumber\largenumber\</FILEPATH>
      <FILENAME>arbitraryint.cpp</FILENAME>
      <LINE>209</LINE>
      <COLUMN>40</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>AInt::*</FUNCTION>
    <DECORATED>??DAInt@@QEAA?AV0@V0@@Z</DECORATED>
    <FUNCLINE>196</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>